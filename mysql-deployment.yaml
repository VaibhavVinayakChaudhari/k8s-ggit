apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.31.1 (46dcb9181)
  creationTimestamp: null
  labels:
    io.kompose.service: mysql
  name: mysql
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.31.1 (46dcb9181)
      creationTimestamp: null
      labels:
        io.kompose.network/docker-tutorial-default: "true"
        io.kompose.service: mysql
    spec:
      containers:
        - env:
            - name: MYSQL_DATABASE
              value: demo
            - name: MYSQL_ROOT_HOST
              value: '%'
            - name: MYSQL_ROOT_PASSWORD
              value: root
          image: mysql/mysql-server:8.0
          livenessProbe:
            exec:
              command:
                - mysqladmin ping -h 127.0.0.1 -u root --password=$MYSQL_ROOT_PASSWORD
            failureThreshold: 10
            periodSeconds: 5
          name: mysql
          resources: {}
          volumeMounts:
            - mountPath: /etc/mysql/my.cnf
              name: mysql-claim0
            - mountPath: /var/lib/mysql
              name: mysqldata
      restartPolicy: Always
      volumes:
        - name: mysql-claim0
          persistentVolumeClaim:
            claimName: mysql-claim0
        - name: mysqldata
          persistentVolumeClaim:
            claimName: mysqldata
status: {}
